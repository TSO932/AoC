namespace AoC2022

module Day06Part2 =

    let isMarker (snippet:string) =

        if Seq.length snippet <> 14 then
            false
        else 
            let a = Array.ofSeq snippet
            a[0] <> a[1] && a[0] <> a[2] && a[0] <> a[3] && a[0] <> a[4] && a[0] <> a[5] && a[0] <> a[6] && a[0] <> a[7] && a[0] <> a[8] && a[0] <> a[9] && a[0] <> a[10] && a[0] <> a[11] && a[0] <> a[12] && a[0] <> a[13]          
            && a[1] <> a[2] && a[1] <> a[3] && a[1] <> a[4] && a[1] <> a[5] && a[1] <> a[6] && a[1] <> a[7] && a[1] <> a[8] && a[1] <> a[9] && a[1] <> a[10] && a[1] <> a[11] && a[1] <> a[12] && a[1] <> a[13]          
            && a[2] <> a[3] && a[2] <> a[4] && a[2] <> a[5] && a[2] <> a[6] && a[2] <> a[7] && a[2] <> a[8] && a[2] <> a[9] && a[2] <> a[10] && a[2] <> a[11] && a[2] <> a[12] && a[2] <> a[13]          
            && a[3] <> a[4] && a[3] <> a[5] && a[3] <> a[6] && a[3] <> a[7] && a[3] <> a[8] && a[3] <> a[9] && a[3] <> a[10] && a[3] <> a[11] && a[3] <> a[12] && a[3] <> a[13]          
            && a[4] <> a[5] && a[4] <> a[6] && a[4] <> a[7] && a[4] <> a[8] && a[4] <> a[9] && a[4] <> a[10] && a[4] <> a[11] && a[4] <> a[12] && a[4] <> a[13] 
            && a[5] <> a[6] && a[5] <> a[7] && a[5] <> a[8] && a[5] <> a[9] && a[5] <> a[10] && a[5] <> a[11] && a[5] <> a[12] && a[5] <> a[13]              
            && a[6] <> a[7] && a[6] <> a[8] && a[6] <> a[9] && a[6] <> a[10] && a[6] <> a[11] && a[6] <> a[12] && a[6] <> a[13]                       
            && a[7] <> a[8] && a[7] <> a[9] && a[7] <> a[10] && a[7] <> a[11] && a[7] <> a[12] && a[7] <> a[13]              
            && a[8] <> a[9] && a[8] <> a[10] && a[8] <> a[11] && a[8] <> a[12] && a[8] <> a[13]              
            && a[9] <> a[10] && a[9] <> a[11] && a[9] <> a[12] && a[9] <> a[13]              
            && a[10] <> a[11] && a[10] <> a[12] && a[10] <> a[13]              
            && a[11] <> a[12] && a[11] <> a[13]
            && a[12] <> a[13]              

    let FindPosition (signal:string) =

        let position = signal
                        |> Seq.mapi (fun i _ -> ( i, signal[ i-13 .. i ] ))
                        |> Seq.filter (fun (_, e) -> isMarker e)
                        |> Seq.head
                        |> fst

        position + 1
        